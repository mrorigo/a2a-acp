# ========================================
# A2A-ACP Core Configuration
# ========================================

# Authentication
A2A_AUTH_TOKEN=your-auth-token-here

# Agent Configuration
A2A_AGENT_COMMAND=python your_agent.py
A2A_AGENT_API_KEY=your-agent-api-key
A2A_AGENT_DESCRIPTION="A2A-ACP Agent with Push Notifications"

# ========================================
# Push Notifications Configuration
# ========================================

# Core Push Notification Settings
PUSH_NOTIFICATIONS_ENABLED=true
PUSH_NOTIFICATION_WEBHOOK_TIMEOUT=30
PUSH_NOTIFICATION_RETRY_ATTEMPTS=3
PUSH_NOTIFICATION_RETRY_DELAY=1.0
PUSH_NOTIFICATION_MAX_RETRY_DELAY=60.0

# Batch Processing
PUSH_NOTIFICATION_BATCH_SIZE=10
PUSH_NOTIFICATION_MAX_CONCURRENT=50

# Real-time Streaming
PUSH_NOTIFICATION_STREAMING_ENABLED=true
PUSH_NOTIFICATION_MAX_WS_CONNECTIONS=100
PUSH_NOTIFICATION_MAX_SSE_CONNECTIONS=200
PUSH_NOTIFICATION_CONNECTION_CLEANUP_INTERVAL=300

# Cleanup Configuration
PUSH_NOTIFICATION_CLEANUP_ENABLED=true
PUSH_NOTIFICATION_CLEANUP_INTERVAL=3600
PUSH_NOTIFICATION_RETENTION_COMPLETED_HOURS=24
PUSH_NOTIFICATION_RETENTION_FAILED_HOURS=0
PUSH_NOTIFICATION_RETENTION_AUTH_REQUIRED_HOURS=168

# Security Settings
PUSH_NOTIFICATION_HMAC_SECRET=your-hmac-secret-for-webhook-validation
PUSH_NOTIFICATION_RATE_LIMIT_PER_MINUTE=60

# Performance Monitoring
PUSH_NOTIFICATION_ENABLE_METRICS=true
PUSH_NOTIFICATION_METRICS_RETENTION_HOURS=72

# ========================================
# Database Configuration
# ========================================

# Database Settings (if needed for custom configuration)
DATABASE_URL=sqlite+aiosqlite:///./a2a_acp.db
DATABASE_POOL_SIZE=10
DATABASE_MAX_OVERFLOW=20

# ========================================
# Server Configuration
# ========================================

# Basic Server Settings
HOST=0.0.0.0
PORT=8000
DEBUG=false

# Logging Configuration
LOG_LEVEL=INFO
LOG_FORMAT=json
LOG_FILE=  # Optional: Set to enable file logging (e.g., /var/log/a2a_acp.log)

# ========================================
# Development Settings
# ========================================

# Development Mode
DEVELOPMENT=false

# Testing Configuration
TESTING=false
TEST_DATABASE_URL=sqlite+aiosqlite:///./test.db

# ========================================
# INPUT_REQUIRED Implementation Notes
# ========================================
# The system now uses protocol-compliant INPUT_REQUIRED detection based on:
# - Zed ACP stopReason field analysis (end_turn + empty toolCalls = input required)
# - Proper protocol semantics instead of heuristic text pattern matching
# - Enhanced reliability and Zed ACP specification compliance

# ========================================
# Production Deployment Checklist
# ========================================
# □ Set A2A_AUTH_TOKEN to a secure random value for API authentication
# □ Configure A2A_AGENT_COMMAND to point to your ZedACP-compatible agent
# □ Set A2A_AGENT_API_KEY if your agent requires authentication
# □ Generate a secure PUSH_NOTIFICATION_HMAC_SECRET for webhook validation
# □ Adjust connection limits based on expected concurrent users
# □ Configure retention policies based on your notification volume
# □ Monitor the cleanup interval and adjust based on database size
# □ Enable metrics collection for production monitoring
# □ Configure LOG_FILE path if file logging is needed